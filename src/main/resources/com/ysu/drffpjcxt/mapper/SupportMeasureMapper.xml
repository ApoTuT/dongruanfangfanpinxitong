<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ysu.drffpjcxt.mapper.SupportMeasureMapper">

    <resultMap type="com.ysu.drffpjcxt.entity.SupportMeasure" id="TSupportMeasureMap">
        <result property="id" column="id" jdbcType="BIGINT"/>
        <result property="planId" column="plan_id" jdbcType="BIGINT"/>
        <result property="measureType" column="measure_type" jdbcType="VARCHAR"/>
        <result property="measureContent" column="measure_content" jdbcType="VARCHAR"/>
        <result property="responsibleId" column="responsible_id" jdbcType="BIGINT"/>
        <result property="budgetAmount" column="budget_amount" jdbcType="DECIMAL"/>
        <result property="status" column="status" jdbcType="VARCHAR"/>
        <result property="isDeleted" column="is_deleted" jdbcType="TINYINT"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="queryById" resultMap="TSupportMeasureMap">
        select
            `id`, `plan_id`, `measure_type`, `measure_content`, `responsible_id`, `budget_amount`, `status`, `is_deleted`, `create_time`, `update_time`
        from t_support_measure
        where `id` = #{id}
    </select>

    <select id="queryAllByLimit" resultMap="TSupportMeasureMap">
        select
        `id`, `plan_id`, `measure_type`, `measure_content`, `responsible_id`, `budget_amount`, `status`, `is_deleted`, `create_time`, `update_time`
        from t_support_measure
        <where>
            <if test="id != null">
                and `id` = #{id}
            </if>
            <if test="planId != null">
                and `plan_id` = #{planId}
            </if>
            <if test="measureType != null and measureType != ''">
                and `measure_type` = #{measureType}
            </if>
            <if test="measureContent != null and measureContent != ''">
                and `measure_content` = #{measureContent}
            </if>
            <if test="responsibleId != null">
                and `responsible_id` = #{responsibleId}
            </if>
            <if test="budgetAmount != null">
                and `budget_amount` = #{budgetAmount}
            </if>
            <if test="status != null and status != ''">
                and `status` = #{status}
            </if>
            <if test="isDeleted != null">
                and `is_deleted` = #{isDeleted}
            </if>
            <if test="createTime != null">
                and `create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                and `update_time` = #{updateTime}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <select id="count" resultType="java.lang.Long">
        select count(1)
        from t_support_measure
        <where>
            <if test="id != null">
                and `id` = #{id}
            </if>
            <if test="planId != null">
                and `plan_id` = #{planId}
            </if>
            <if test="measureType != null and measureType != ''">
                and `measure_type` = #{measureType}
            </if>
            <if test="measureContent != null and measureContent != ''">
                and `measure_content` = #{measureContent}
            </if>
            <if test="responsibleId != null">
                and `responsible_id` = #{responsibleId}
            </if>
            <if test="budgetAmount != null">
                and `budget_amount` = #{budgetAmount}
            </if>
            <if test="status != null and status != ''">
                and `status` = #{status}
            </if>
            <if test="isDeleted != null">
                and `is_deleted` = #{isDeleted}
            </if>
            <if test="createTime != null">
                and `create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                and `update_time` = #{updateTime}
            </if>
        </where>
    </select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_support_measure(`plan_id`, `measure_type`, `measure_content`, `responsible_id`, `budget_amount`, `status`, `is_deleted`, `create_time`, `update_time`)
        values (#{planId}, #{measureType}, #{measureContent}, #{responsibleId}, #{budgetAmount}, #{status}, #{isDeleted}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        t_support_measure(`plan_id`, `measure_type`, `measure_content`, `responsible_id`, `budget_amount`, `status`, `is_deleted`, `create_time`, `update_time`)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.planId}, #{entity.measureType}, #{entity.measureContent}, #{entity.responsibleId}, #{entity.budgetAmount}, #{entity.status}, #{entity.isDeleted}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into
        t_support_measure(`id`, `plan_id`, `measure_type`, `measure_content`, `responsible_id`, `budget_amount`, `status`, `is_deleted`, `create_time`, `update_time`)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.id}, #{entity.planId}, #{entity.measureType}, #{entity.measureContent}, #{entity.responsibleId}, #{entity.budgetAmount}, #{entity.status}, #{entity.isDeleted}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        `plan_id` = values(`plan_id`),
        `measure_type` = values(`measure_type`),
        `measure_content` = values(`measure_content`),
        `responsible_id` = values(`responsible_id`),
        `budget_amount` = values(`budget_amount`),
        `status` = values(`status`),
        `is_deleted` = values(`is_deleted`),
        `update_time` = values(`update_time`)
    </insert>

    <update id="update">
        update t_support_measure
        <set>
            <if test="planId != null">
                `plan_id` = #{planId},
            </if>
            <if test="measureType != null and measureType != ''">
                `measure_type` = #{measureType},
            </if>
            <if test="measureContent != null and measureContent != ''">
                `measure_content` = #{measureContent},
            </if>
            <if test="responsibleId != null">
                `responsible_id` = #{responsibleId},
            </if>
            <if test="budgetAmount != null">
                `budget_amount` = #{budgetAmount},
            </if>
            <if test="status != null and status != ''">
                `status` = #{status},
            </if>
            <if test="isDeleted != null">
                `is_deleted` = #{isDeleted},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
            <if test="updateTime != null">
                `update_time` = #{updateTime},
            </if>
        </set>
        where `id` = #{id}
    </update>

    <delete id="deleteById">
        delete
        from t_support_measure
        where `id` = #{id}
    </delete>
    <select id="queryByPlanId" resultMap="TSupportMeasureMap">
        select
            id, plan_id, measure_type, measure_content, responsible_id, budget_amount, status, is_deleted, create_time, update_time
        from t_support_measure
        where plan_id = #{planId} and is_deleted = 0
    </select>
    <update id="softDeleteByPlanId">
        update t_support_measure
        set is_deleted = 1
        where plan_id = #{planId}
    </update>

    <update id="softDeleteById">
        update t_support_measure
        set is_deleted = 1
        where id = #{id}
    </update>

</mapper>